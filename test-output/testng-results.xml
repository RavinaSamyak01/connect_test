<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="0" failed="0" skipped="11">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-18T16:57:20 IST" name="ConnectSuite" finished-at="2023-08-18T16:57:20 IST" duration-ms="129">
    <groups>
    </groups>
    <test started-at="2023-08-18T16:57:20 IST" name="OrderCreationProcessing" finished-at="2023-08-18T16:57:20 IST" duration-ms="22">
      <class name="connect_OrderProcessing.AllOrderCreation">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:connect_OrderProcessing.AllOrderCreation@bcec361]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040675" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="allOrderCreation()[pri:0, instance:connect_OrderProcessing.AllOrderCreation@bcec361]" started-at="2023-08-18T16:57:20 IST" name="allOrderCreation" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allOrderCreation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:connect_OrderProcessing.AllOrderCreation@bcec361]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040680" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- connect_OrderProcessing.AllOrderCreation -->
    </test> <!-- OrderCreationProcessing -->
    <test started-at="2023-08-18T16:57:20 IST" name="ECourier-Test Utility" finished-at="2023-08-18T16:57:20 IST" duration-ms="5">
      <class name="connect_Ecourier.LOCEcourier">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:connect_Ecourier.LOCEcourier@c0c2f8d]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040691" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="LocEcourier()[pri:0, instance:connect_Ecourier.LOCEcourier@c0c2f8d]" started-at="2023-08-18T16:57:20 IST" name="LocEcourier" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LocEcourier -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:connect_Ecourier.LOCEcourier@c0c2f8d]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040694" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- connect_Ecourier.LOCEcourier -->
    </test> <!-- ECourier-Test Utility -->
    <test started-at="2023-08-18T16:57:20 IST" name="DeltaAirline" finished-at="2023-08-18T16:57:20 IST" duration-ms="6">
      <class name="Connect_CreateBookingdeltaAirlines.SDdelta">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:Connect_CreateBookingdeltaAirlines.SDdelta@291caca8]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040700" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="sdSameDay()[pri:0, instance:Connect_CreateBookingdeltaAirlines.SDdelta@291caca8]" started-at="2023-08-18T16:57:20 IST" name="sdSameDay" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sdSameDay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Connect_CreateBookingdeltaAirlines.SDdelta@291caca8]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040703" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- Connect_CreateBookingdeltaAirlines.SDdelta -->
    </test> <!-- DeltaAirline -->
    <test started-at="2023-08-18T16:57:20 IST" name="Quick Quote verification" finished-at="2023-08-18T16:57:20 IST" duration-ms="6">
      <class name="Quick_Quote_28658.quick_quote">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:Quick_Quote_28658.quick_quote@445b295b]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040709" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="quickQuote()[pri:0, instance:Quick_Quote_28658.quick_quote@445b295b]" started-at="2023-08-18T16:57:20 IST" name="quickQuote" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quickQuote -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Quick_Quote_28658.quick_quote@445b295b]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040712" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- Quick_Quote_28658.quick_quote -->
    </test> <!-- Quick Quote verification -->
    <test started-at="2023-08-18T16:57:20 IST" name="customer segment verification" finished-at="2023-08-18T16:57:20 IST" duration-ms="5">
      <class name="customer_segment_28661.customer_segment">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:customer_segment_28661.customer_segment@4e3958e7]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040719" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="custSegment()[pri:0, instance:customer_segment_28661.customer_segment@4e3958e7]" started-at="2023-08-18T16:57:20 IST" name="custSegment" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- custSegment -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:customer_segment_28661.customer_segment@4e3958e7]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040721" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- customer_segment_28661.customer_segment -->
    </test> <!-- customer segment verification -->
    <test started-at="2023-08-18T16:57:20 IST" name="AutoDispatch_28677" finished-at="2023-08-18T16:57:20 IST" duration-ms="4">
      <class name="AutoDispatch_28677.connect_autodispatch">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:AutoDispatch_28677.connect_autodispatch@2d2ffcb7]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040728" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="auto_dispatch()[pri:0, instance:AutoDispatch_28677.connect_autodispatch@2d2ffcb7]" started-at="2023-08-18T16:57:20 IST" name="auto_dispatch" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- auto_dispatch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:AutoDispatch_28677.connect_autodispatch@2d2ffcb7]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040731" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- AutoDispatch_28677.connect_autodispatch -->
    </test> <!-- AutoDispatch_28677 -->
    <test started-at="2023-08-18T16:57:20 IST" name="Ship Label Services_28678" finished-at="2023-08-18T16:57:20 IST" duration-ms="6">
      <class name="Ship_Label_Services_28678.connect_ship_label">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:Ship_Label_Services_28678.connect_ship_label@7b02881e]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040738" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ship_label()[pri:0, instance:Ship_Label_Services_28678.connect_ship_label@7b02881e]" started-at="2023-08-18T16:57:20 IST" name="ship_label" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ship_label -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Ship_Label_Services_28678.connect_ship_label@7b02881e]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040741" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- Ship_Label_Services_28678.connect_ship_label -->
    </test> <!-- Ship Label Services_28678 -->
    <test started-at="2023-08-18T16:57:20 IST" name="Business Unit verification in edit tab" finished-at="2023-08-18T16:57:20 IST" duration-ms="6">
      <class name="BU_verification_30014.Business_unit_verification">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:BU_verification_30014.Business_unit_verification@683dbc2c]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040747" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="fatl()[pri:0, instance:BU_verification_30014.Business_unit_verification@683dbc2c]" started-at="2023-08-18T16:57:20 IST" name="fatl" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fatl -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:BU_verification_30014.Business_unit_verification@683dbc2c]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040749" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- BU_verification_30014.Business_unit_verification -->
    </test> <!-- Business Unit verification in edit tab -->
    <test started-at="2023-08-18T16:57:20 IST" name="Verify Bill" finished-at="2023-08-18T16:57:20 IST" duration-ms="4">
      <class name="Connect_VerifyBill.VerifyBill">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:Connect_VerifyBill.VerifyBill@548e6d58]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040758" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Connect_VerifyBill.VerifyBill@548e6d58]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040759" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="massVfyBill()[pri:0, instance:Connect_VerifyBill.VerifyBill@548e6d58]" started-at="2023-08-18T16:57:20 IST" name="massVfyBill" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- massVfyBill -->
      </class> <!-- Connect_VerifyBill.VerifyBill -->
    </test> <!-- Verify Bill -->
    <test started-at="2023-08-18T16:57:20 IST" name="MassVerifyBillCustomer" finished-at="2023-08-18T16:57:20 IST" duration-ms="4">
      <class name="Connect_VerifyBill.MassVerifyBillCustomer">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:Connect_VerifyBill.MassVerifyBillCustomer@21b2e768]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040766" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="MVCBill()[pri:0, instance:Connect_VerifyBill.MassVerifyBillCustomer@21b2e768]" started-at="2023-08-18T16:57:20 IST" name="MVCBill" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MVCBill -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Connect_VerifyBill.MassVerifyBillCustomer@21b2e768]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040768" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- Connect_VerifyBill.MassVerifyBillCustomer -->
    </test> <!-- MassVerifyBillCustomer -->
    <test started-at="2023-08-18T16:57:20 IST" name="SpotQuote_Verification" finished-at="2023-08-18T16:57:20 IST" duration-ms="9">
      <class name="connect_SpotQuoteVerification.SpotQuote_Verification">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:connect_SpotQuoteVerification.SpotQuote_Verification@11fc564b]" started-at="2023-08-18T16:57:16 IST" name="beforeMethod" finished-at="2023-08-18T16:57:20 IST" duration-ms="4318" status="FAIL">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.97 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'SIPL30', ip: '10.100.112.30'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --headless, --window-size=1920, 1080, --disable-extensions, --no-sandbox, enable-automation, --dns-prefetch-disable, --disable-gpu, enable-features=NetworkServ..., --disable-infobars, --disable-dev-shm-usage, --force-device-scale-factor=1, --no-proxy-server, --log-level=3, --silent, --no-proxy-server, --proxy-bypass-list=*], extensions: [], prefs: {download.default_directory: D:\Parth workspace\TestingA..., profile.default_content_settings.popups: 0, safebrowsing.enabled: false}}}]}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.97 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'SIPL30', ip: '10.100.112.30'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --headless, --window-size=1920, 1080, --disable-extensions, --no-sandbox, enable-automation, --dns-prefetch-disable, --disable-gpu, enable-features=NetworkServ..., --disable-infobars, --disable-dev-shm-usage, --force-device-scale-factor=1, --no-proxy-server, --log-level=3, --silent, --no-proxy-server, --proxy-bypass-list=*], extensions: [], prefs: {download.default_directory: D:\Parth workspace\TestingA..., profile.default_content_settings.popups: 0, safebrowsing.enabled: false}}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:73)
at connect_BasePackage.BaseInit.beforeMethod(BaseInit.java:137)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:317)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:connect_SpotQuoteVerification.SpotQuote_Verification@11fc564b]" started-at="2023-08-18T16:57:20 IST" name="testMethodName" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040781" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="VerifySpotQuote()[pri:0, instance:connect_SpotQuoteVerification.SpotQuote_Verification@11fc564b]" started-at="2023-08-18T16:57:20 IST" name="VerifySpotQuote" finished-at="2023-08-18T16:57:20 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.97 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'SIPL30', ip: '10.100.112.30'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --headless, --window-size=1920, 1080, --disable-extensions, --no-sandbox, enable-automation, --dns-prefetch-disable, --disable-gpu, enable-features=NetworkServ..., --disable-infobars, --disable-dev-shm-usage, --force-device-scale-factor=1, --no-proxy-server, --log-level=3, --silent, --no-proxy-server, --proxy-bypass-list=*], extensions: [], prefs: {download.default_directory: D:\Parth workspace\TestingA..., profile.default_content_settings.popups: 0, safebrowsing.enabled: false}}}]}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.97 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'SIPL30', ip: '10.100.112.30'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --headless, --window-size=1920, 1080, --disable-extensions, --no-sandbox, enable-automation, --dns-prefetch-disable, --disable-gpu, enable-features=NetworkServ..., --disable-infobars, --disable-dev-shm-usage, --force-device-scale-factor=1, --no-proxy-server, --log-level=3, --silent, --no-proxy-server, --proxy-bypass-list=*], extensions: [], prefs: {download.default_directory: D:\Parth workspace\TestingA..., profile.default_content_settings.popups: 0, safebrowsing.enabled: false}}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:73)
at connect_BasePackage.BaseInit.beforeMethod(BaseInit.java:137)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:317)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySpotQuote -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:connect_SpotQuoteVerification.SpotQuote_Verification@11fc564b]" started-at="2023-08-18T16:57:20 IST" name="getResult" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040788" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="SendEmail()[pri:0, instance:connect_SpotQuoteVerification.SpotQuote_Verification@11fc564b]" started-at="2023-08-18T16:57:20 IST" name="SendEmail" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1692358040800" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendEmail -->
      </class> <!-- connect_SpotQuoteVerification.SpotQuote_Verification -->
    </test> <!-- SpotQuote_Verification -->
  </suite> <!-- ConnectSuite -->
</testng-results>
